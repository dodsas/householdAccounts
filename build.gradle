/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter deposit the Gradle
 * user guide available at https://docs.gradle.org/4.10/userguide/java_library_plugin.html
 */
buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        maven {
            url "http://repo1.maven.org/maven2"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'org.hidetake.ssh' version '2.9.0'
}

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    maven {
        url "http://repo1.maven.org/maven2"
    }
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //compile 'org.apache.commons:commons-math3:3.6.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'

    // https://mvnrepository.com/artifact/org.apache.pdfbox/pdfbox
    compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.12'

    compile files('libs/mariadb-java-client-2.2.6.jar')
    //compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.2.6'

    // Spring boot
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-undertow')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    compile 'org.projectlombok:lombok:1.18.2'
    compile 'javax.xml.bind:jaxb-api:2.3.0'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test{
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}


remotes {
    aws {
        role 'masterNode'
        host = '54.180.58.110'
        user = 'centos'
        identity = file('/Users/dodsas/Documents/Gitbucket/doc/AwsKeyPair.pem')
    }
}

ssh.settings {
    knownHosts = allowAnyHosts
}

check.dependsOn.remove(build)

task deploy {
    doLast {
        ssh.run {
            session(remotes.aws) {
                put from: 'build/libs/householdAccounts.jar', into: '/home/centos/deploy/householdAccounts'
                execute 'sh /home/centos/bin/startHouseholdAccounts.sh'
            }
        }
    }
}

jar {
    baseName = project.name
    version = '1.0'
}